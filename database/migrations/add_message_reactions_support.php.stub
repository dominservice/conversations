<?php

/**
 * Conversations
 *
 * This package will allow you to add a full user messaging system
 * into your Laravel application.
 *
 * @package   Dominservice\Conversations
 * @author    DSO-IT Mateusz Domin <biuro@dso.biz.pl>
 * @copyright (c) 2021 DSO-IT Mateusz Domin
 * @license   MIT
 * @version   3.0.0
 */

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        // Create conversation_message_reactions table
        $userModel = new (config('conversations.user_model'));

        if (!Schema::hasTable(config('conversations.tables.conversation_message_reactions', 'conversation_message_reactions'))) {
            Schema::create(config('conversations.tables.conversation_message_reactions', 'conversation_message_reactions'), function (Blueprint $table) use($userModel) {

                $table->id();
                $table->foreignId('message_id')
                    ->references('id')
                    ->on(config('conversations.tables.conversation_messages'))
                    ->onDelete('cascade');

                // User foreign key (supports both UUID and integer IDs)
                if ($userModel->getKeyType() === 'uuid') {
                    $table->uuid('user_uuid');
                    $table->foreign('user_uuid')
                        ->references($userModel->getKeyName())
                        ->on($userModel->getTable())
                        ->onDelete('cascade');
                } else {
                    $table->foreignId('user_id')
                        ->references($userModel->getKeyName())
                        ->on($userModel->getTable())
                        ->onDelete('cascade');
                }

                $table->string('reaction', 50); // Store the emoji or reaction code
                $table->timestamps();

                // Add indexes
                $table->index('message_id');
                if ($userModel->getKeyType() === 'uuid') {
                    $table->index('user_uuid');
                    // Ensure a user can only react once with the same emoji to a message
                    $table->unique(['message_id', 'user_uuid', 'reaction'], 'unique_user_reaction_uuid');
                } else {
                    $table->index('user_id');
                    // Ensure a user can only react once with the same emoji to a message
                    $table->unique(['message_id', 'user_id', 'reaction'], 'unique_user_reaction');
                }
            });
        }

        // Add conversation_message_reactions to tables config if not exists
        if (!array_key_exists('conversation_message_reactions', config('conversations.tables'))) {
            // We can't modify the config file directly in a migration,
            // but we'll document this in the README update
        }
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        // Drop conversation_message_reactions table
        Schema::dropIfExists(config('conversations.tables.conversation_message_reactions', 'conversation_message_reactions'));
    }
};
